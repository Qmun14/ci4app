Catatan Penting :
1. Folder App -> Folder inti dari CI4 :
                        *Config->Routes.php -> sebuah file yg akan menentukan jalur dari aplikasi kita.
                                            -> $routes->get('/' 'Home::index'); ini maksudnya :
                                                Ci akan membuat jalur ketika ada akses yg method req. get (mengetikan sesuatu di URL)
                                                alamatnya adalah slash '/' (root) arahkan ke Controller Home dan methodnya Index.
                                                secara defultnya Controller nya Home method nya index, file nya ada di folder App -> Controllers -> Home.php dan methodnya index,
                                                ketika method ini dipanggil method nya mengembalikan sebuah view.
                                                Secara Default URL kita mempunyai segment (string yg dibatasi oleh '/'), slash yg pertama adalah: Controller,
                                                slash yg kedua adalah: Method.
                                                * Apabila kita membuat Controller Baru yang mengextend dari Controller BaseController.php, kita tidak perlu menambhakan root baru sealama aturanya memenuhi ('controller/method').
                                                  Kalaupun kita tulis juga tidak apa2, kita bisa menambah root baru dengan cara $routes->add('/coba', 'Coba::index');. method nya
                                                  tidak selalu add() bisa juga pake get(), post(), delete() dll,, supaya lebih aman dan efektif. 
                                                  selanjutnya kita juga bisa tidak memanggil Controller atau method, kita bisa meggunakan sesuatu yang dinamakan Closures (Anonymous FUnction) sebagai paramter nya.
                                            -> Kita bisa menambahkan '/' slash lagi untuk mengirimkan data sebagai parameter di segment URL, cara nya kita tinggal jadikan sebagai parameter di methodnya.
                                               kita juga bs memanipulasi rooting ini dengan cara membuat routes baru method nya get {$routes->get('/coba/(:any)/(:num)', 'Coba::about/$1/$2');}, ini namanya teknik templating (palceholder).
                                               *Jangan lupa bikin Routes baru untuk menangani jika ada yg menangani ketika ada yg mengaskes method nya. {$routes->get('/coba/index', 'Coba::index');}
                                                dan {$routes->get('/coba/about', 'Coba::about');}
                                            -> Kita Juga Bisa menyimpan si Controller kita kedalam sebuah nameSpace atau folder lagi, caranya betulin nameSpace nya sesuai posisi foldernya, dan jangan lupa di arahkan dengan cara
                                               use App\Controllers\BaseController;. dan benerin Routes-nya ->  $routes->('/users', 'Admin\Users::index');
                                            -> Semuanya diatur jalurnya oleh Routes, jadi penting banget pemahaman Routes ini. Pleajari lebih jauh.  
                        *Views -> sebuah file yg menangani view/tampilan dari aplikasi kita.
                               -> konfigurasi nya tetap di kontrol oleh Controller yang kita buat dahulu sebelumnya di folder Controllers,
                               -> biasakan sesuaikan dengan Routes nya default URL di setting ke view yg ingin kita tampilkan / ubah setting Routes-nya.
                               -> di CI4 ini ada metode baru untuk menangani view dengan cara layout template, yang membuat placeholder/template jadi lebih rapih, metodenya yaitu 
                                  Layout View dengan membuat file template.php di folder layout dengan fungsi <?= $this->renderSection('content'); ?>, buka pake tag echo php lalu apa nama content nya,,
                                  kemudian cara make nya extend renderSection tadi di masing2 halaman view nya <?= $this->extend('layout/template'); ?>, dan pemakaiannya :
                                  <?= $this->section('content'); ?>
                                    <div class="container">
                                       <div class="row">
                                          <div class="col">
                                                <h2>Contact Us</h2>
                                                <?php foreach($alamat as $a): ?>
                                                   <ul>
                                                      <li><?= $a['tipe']; ?></li>
                                                      <li><?= $a['alamat']; ?></li>
                                                      <li><?= $a['kota']; ?></li>
                                                   </ul>
                                                <?php endforeach; ?>
                                          </div>
                                       </div>
                                    </div>
                                  <?= $this->endSection(); ?>
                        *Models -> Model adalah menyediakan cara untuk berinteraksi dengan table yang spesifik di dalam database kita. di CI4 di dalamnya sudah ada method helpers yg membantu kita 
                                   untuk berinteraksi dengan database kita dengan cara yg standard.
                                   - di CI4 kita bisa mengatur konfigurasi database nya di file .env dengan konfig sbb:
                                       database.default.hostname = localhost
                                       database.default.database = ci4
                                       database.default.username = root
                                       database.default.password = 
                                       database.default.DBDriver = MySQLi
                                    dengan catatan hidupkan dengan hapus tanda pagar di depannya.
                                   - ada beberapa property yang harus kita isi didalam Model cek di documentasi CI nya sbb:
                                       protected $table = 'computer'; --> ini nama table yg kita pakai di model ini
                                       protected $useTimestamps = true;  --> ini timestamp untuk crated_at dan updated_at
                                    konfigurasi nya samakan dengan kelas Model Utama CI4 nya (cari di ctrl + p ketik model), disini cari yang kalo tidak ada nilai defautnya wajib di isi dengan
                                    konfig sesuai aplikasi yang ingin kita bangun.
                                    dengan cara ini saja kita sudah bisa menghubungkan Ci4 kita dengan Database(table).
                        ****
                        *CRUD di CI4 :
                        1. Create ->                            


2. Folder Public -> - Folder tempat menyimpan Asset Project.
                    - Secara Default sudah ada file .htacces untuk preety URL. menggunakan fitur mode Re-Write.
                    - fave icon.
                    - index.php -> file Bootstrapnya : satu file yangakan membawa file2 lainnya.
                    - robots.txt -> buat Search Engine.
3. Folder Test -> Folder untuk menjalankan aplikasi testing.
4. Folder Vendor -> Folder tempat menyimpan dependency dari file project kita, dikelola oleh file 'composer.json' otmatis diisi oleh composernnya.
5. Folder Writeable -> Folder dimana Codeigniter nya akan menulis sesuatu scara  otomatis ke sini untuk cache debug log dll. tidak untuk dimodif.
6. File env -> - file template untuk konfigurasi environment, harus dire-name menjadi .env supaya jadi file system. Copy dulu aja penting sebelum di rename.
               - yang biasa di ubah adalah CI_ENVIRONEMENT jadi = development (kalo lagi bikin aplikasi). default nya production.
               - ganti app.baseURL = 'http://localhost:8080' kalo pake php spark serve.


